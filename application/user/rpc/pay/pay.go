// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package pay

import (
	"context"

	"hmall/application/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DecutMoneyReq  = pb.DecutMoneyReq
	DecutMoneyResp = pb.DecutMoneyResp

	Pay interface {
		DecutMoney(ctx context.Context, in *DecutMoneyReq, opts ...grpc.CallOption) (*DecutMoneyResp, error)
		DecutMoneyRollBack(ctx context.Context, in *DecutMoneyReq, opts ...grpc.CallOption) (*DecutMoneyResp, error)
	}

	defaultPay struct {
		cli zrpc.Client
	}
)

func NewPay(cli zrpc.Client) Pay {
	return &defaultPay{
		cli: cli,
	}
}

func (m *defaultPay) DecutMoney(ctx context.Context, in *DecutMoneyReq, opts ...grpc.CallOption) (*DecutMoneyResp, error) {
	client := pb.NewPayClient(m.cli.Conn())
	return client.DecutMoney(ctx, in, opts...)
}

func (m *defaultPay) DecutMoneyRollBack(ctx context.Context, in *DecutMoneyReq, opts ...grpc.CallOption) (*DecutMoneyResp, error) {
	client := pb.NewPayClient(m.cli.Conn())
	return client.DecutMoneyRollBack(ctx, in, opts...)
}
