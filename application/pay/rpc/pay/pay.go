// Code generated by goctl. DO NOT EDIT.
// Source: pay.proto

package pay

import (
	"context"

	"hmall/application/pay/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UpdatePayOrderReq  = pb.UpdatePayOrderReq
	UpdatePayOrderResp = pb.UpdatePayOrderResp

	Pay interface {
		UpdatePayOrder(ctx context.Context, in *UpdatePayOrderReq, opts ...grpc.CallOption) (*UpdatePayOrderResp, error)
		UpdatePayOrderRollBack(ctx context.Context, in *UpdatePayOrderReq, opts ...grpc.CallOption) (*UpdatePayOrderResp, error)
	}

	defaultPay struct {
		cli zrpc.Client
	}
)

func NewPay(cli zrpc.Client) Pay {
	return &defaultPay{
		cli: cli,
	}
}

func (m *defaultPay) UpdatePayOrder(ctx context.Context, in *UpdatePayOrderReq, opts ...grpc.CallOption) (*UpdatePayOrderResp, error) {
	client := pb.NewPayClient(m.cli.Conn())
	return client.UpdatePayOrder(ctx, in, opts...)
}

func (m *defaultPay) UpdatePayOrderRollBack(ctx context.Context, in *UpdatePayOrderReq, opts ...grpc.CallOption) (*UpdatePayOrderResp, error) {
	client := pb.NewPayClient(m.cli.Conn())
	return client.UpdatePayOrderRollBack(ctx, in, opts...)
}
