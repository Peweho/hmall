// Code generated by goctl. DO NOT EDIT.
// Source: item.proto

package server

import (
	"context"

	"hmall/application/item/rpc/internal/logic"
	"hmall/application/item/rpc/internal/svc"
	"hmall/application/item/rpc/pb"
)

type ItemServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedItemServer
}

func NewItemServer(svcCtx *svc.ServiceContext) *ItemServer {
	return &ItemServer{
		svcCtx: svcCtx,
	}
}

func (s *ItemServer) FindItemByIds(ctx context.Context, in *pb.FindItemByIdsReq) (*pb.FindItemByIdsResp, error) {
	l := logic.NewFindItemByIdsLogic(ctx, s.svcCtx)
	return l.FindItemByIds(in)
}

func (s *ItemServer) DelStock(ctx context.Context, in *pb.DelStockReq) (*pb.DelStockResp, error) {
	l := logic.NewDelStockLogic(ctx, s.svcCtx)
	return l.DelStock(in)
}

func (s *ItemServer) DelStockRollBack(ctx context.Context, in *pb.DelStockReq) (*pb.DelStockResp, error) {
	l := logic.NewDelStockRollBackLogic(ctx, s.svcCtx)
	return l.DelStockRollBack(in)
}

// 秒杀商品服务
func (s *ItemServer) DelFlashItemStock(ctx context.Context, in *pb.DelFlashItemStockReq) (*pb.DelFlashItemStockResp, error) {
	l := logic.NewDelFlashItemStockLogic(ctx, s.svcCtx)
	return l.DelFlashItemStock(in)
}

func (s *ItemServer) FlashUserStatus(ctx context.Context, in *pb.FlashUserStatusReq) (*pb.FlashUserStatusResp, error) {
	l := logic.NewFlashUserStatusLogic(ctx, s.svcCtx)
	return l.FlashUserStatus(in)
}
