// Code generated by goctl. DO NOT EDIT.
// Source: item.proto

package item

import (
	"context"

	"hmall/application/item/rpc/types/service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindItemByIdsReq  = service.FindItemByIdsReq
	FindItemByIdsResp = service.FindItemByIdsResp
	Items             = service.Items

	Item interface {
		FindItemByIds(ctx context.Context, in *FindItemByIdsReq, opts ...grpc.CallOption) (*FindItemByIdsResp, error)
	}

	defaultItem struct {
		cli zrpc.Client
	}
)

func NewItem(cli zrpc.Client) Item {
	return &defaultItem{
		cli: cli,
	}
}

func (m *defaultItem) FindItemByIds(ctx context.Context, in *FindItemByIdsReq, opts ...grpc.CallOption) (*FindItemByIdsResp, error) {
	client := service.NewItemClient(m.cli.Conn())
	return client.FindItemByIds(ctx, in, opts...)
}
