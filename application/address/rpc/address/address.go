// Code generated by goctl. DO NOT EDIT.
// Source: address.proto

package address

import (
	"context"

	"hmall/application/address/rpc/service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindAdressByIdReq  = service.FindAdressByIdReq
	FindAdressByIdResp = service.FindAdressByIdResp

	Address interface {
		FindAdressById(ctx context.Context, in *FindAdressByIdReq, opts ...grpc.CallOption) (*FindAdressByIdResp, error)
	}

	defaultAddress struct {
		cli zrpc.Client
	}
)

func NewAddress(cli zrpc.Client) Address {
	return &defaultAddress{
		cli: cli,
	}
}

func (m *defaultAddress) FindAdressById(ctx context.Context, in *FindAdressByIdReq, opts ...grpc.CallOption) (*FindAdressByIdResp, error) {
	client := service.NewAddressClient(m.cli.Conn())
	return client.FindAdressById(ctx, in, opts...)
}
